@model rokWebsite.ViewModels.RoleAndClaims
@{
    Layout = "_LayoutAdmin";
    ViewData["Title"] = "IndexRole";
}
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery Antiforgery




@section HeadScripts
{
    <link href="~/css/dataTable.css" rel="stylesheet" />
    <link href="~/lib/switchery/switchery.min.css" rel="stylesheet" />
}

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <div class="row">
                <div class="card" style="background-color: #202940 ">
                    <div class="card-header card-header-primary">
                        <h4 class="card-title">Role Actions</h4>
                    </div>
                    <div class="card-body">
                        <div class="card" style="background-color: #1A2035 ">
                            <div class="card-header card-header-primary">
                                <h4 class="card-title">Create Role</h4>
                            </div>
                            <div class="card-body">
                                <form method="post" asp-controller="Role" asp-action="CreateRole">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label class="bmd-label-floating" asp-for="@Model.RoleName"></label>
                                                <input asp-for="@Model.RoleName" type="text" class="form-control" autocomplete="off" />
                                                <span asp-validation-for="@Model.RoleName" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-primary pull-right">Create Role</button>

                                    <div class="clearfix"></div>
                                </form>
                            </div>
                        </div>
                        <br />
                        <div class="card" style="background-color: #1A2035">
                            <div class="card-header card-header-primary">
                                <h4 class="card-title">Delete Role</h4>
                            </div>
                            <div class="card-body">
                                <form method="post" asp-controller="Role" asp-action="DeleteRole">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label class="bmd-label-floating" asp-for="@Model.DeleteRoleName"></label>
                                                <input id="DeleteRoleName" asp-for="@Model.DeleteRoleName" type="text" class="form-control" autocomplete="off" />
                                                <span asp-validation-for="@Model.DeleteRoleName" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-primary pull-right">Delete Role</button>

                                    <div class="clearfix"></div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>


            </div>

        </div>
        <div class="col-md-8">
            <partial name="_PartialViews/RoleTablePartial" />
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" id="ClaimSwitches">
               
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>


@section JsScripts
{
    <partial name="_ValidationScriptsPartial" />


    <script src="~/js/CustomDatatable.js"></script>
    <script src="~/lib/switchery/switchery.min.js"></script>


    <script>
        var roleId; //global

        $(document).ready(function () {
            $('#example').DataTable({
                "pageLength": 5
            });
        });

        function _GetRoleClaims(clicked_id) {
            roleId = clicked_id;
            var AllClaims = [];
            var AllClaimNames = [];
            @foreach (var item in Model.Claims)
            {
                @:AllClaims.push(@item.Id) //We didn't use string because this time id's are int
                @:AllClaimNames.push("@item.ClaimValue")
            }
            // 2 dizide aynı indexlerde Id ve name tutuluyor, response döngüsünde element id ve text olarak rolename atanabilmesi için
            var i = 0;
            $.ajax({
                type: "post",
                headers: { RequestVerificationToken: "@Antiforgery.GetTokens(Context).RequestToken"},
                cache: false,
                contenttype: "application/json; charset=utf-8",
                url: '@Url.Action("GetRoleClaims", "Role")',
                data: { RoleId: clicked_id },
                datatype: "json",
                success: function (response) {
                    $("#RoleSwitches").html("");
                    for (const val of AllClaims) {
                        if (response.includes(val)) {
                            document.querySelector("#ClaimSwitches").insertAdjacentHTML('afterbegin', `<div class="form-check form-switch" id="${val}"><input type="checkbox" class="js-switch" id="test" checked /><label style="color:black" class="form-check-label" for="flexSwitchCheckDefault">${AllClaimNames[i]}</label></div>`);
                        }
                        else {
                            document.querySelector("#ClaimSwitches").insertAdjacentHTML('afterbegin', `<div class="form-check form-switch" id="${val}"><input type="checkbox" class="js-switch" id="test" /><label style="color:black" class="form-check-label" for="flexSwitchCheckDefault">${AllClaimNames[i]}</label></div>`);
                        }
                        i++;
                    }
                    convertToSwitchery();
                    AddListener();
                },
                error: function(response) {
                    alert("err")
                }
            })
        };

       function convertToSwitchery() {

        // get all "js-switch" class inputs in the DOM
        const jsSwitchInputs = document.querySelectorAll('.js-switch');

        jsSwitchInputs.forEach(input => {
            // ignore if input is already switchery
            if (input.dataset.switchery) {
                return;
            }
            // create new Switchery object
            new Switchery(input);
        });

    }


    function AddListener() {
        const switches = document.querySelectorAll('.switchery');
        var i = 0;
        switches.forEach(inputs => {
            inputs.id = "tempId" + i;
            inputs.addEventListener('click', function () {
                $.ajax({
                    type: "post",
                    headers: { RequestVerificationToken: "@Antiforgery.GetTokens(Context).RequestToken"},
                    cache: false,
                    contenttype: "application/json; charset=utf-8",
                    url: '@Url.Action("SwitchRoleClaim", "Role")',
                    data: { RoleId: roleId, ClaimId: $('#' + inputs.id).parent().attr('id')},
                    datatype: "json",
                    success: function (response) {
                        if (response.contentType == "success") {

                            sendNotify(response.data , "success")
                        }
                        else {
                            sendNotify(response.data, "danger")
                        }
                    },
                    error: function(response) {
                        alert("err")
                    }
                })
            })
            i++;
        });
    }


    </script>
}

@{
    <script src="~/js/jquery.min.js"></script>

    if (TempData["error"] != null)
    {
        var SomeList = TempData["error"] as IEnumerable<string>
    ;

        foreach (var item in SomeList)
        {
            <script>
                $(document).ready(function () {
                    sendNotify("@item" , "error")
                });
            </script>
        }
        TempData.Remove("error");
    }
    if (TempData["success"] != null)
    {
        <script>
            $(document).ready(function () {
                sendNotify("@TempData["success"]" , "success")
            });
        </script>
        TempData.Remove("success");
    }
}

